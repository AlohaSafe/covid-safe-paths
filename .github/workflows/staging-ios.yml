on:
  push:
  #   branches:
  #     - develop
  #     - release-candidate
  #     - master
  # pull_request:
  #   branches:
  #     - develop
  #     - release-candidate
  #     - master

jobs:
  build_staging_ios:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@master

      - name: Set XCode Version
        run: sudo xcode-select -s /Applications/Xcode_11.app

      - name: Cache node_modules/
        uses: actions/cache@v1
        id: node_cache
        with:
          path: node_modules
          key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-yarn-cache-

      - name: Install Node Dependencies
        if: steps.node_cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      - name: Install bundler for ruby package management
        run: gem install bundler -v "$(grep -A 1 "BUNDLED WITH" ./Gemfile.lock | tail -n 1)"
        working-directory: ./ios

      - name: Cache ruby gems
        uses: actions/cache@v1
        id: ruby_cache
        with:
          path: ios/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/ios/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Ruby Dependencies
        if: steps.ruby_cache.outputs.cache-hit != 'true'
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
        working-directory: ./ios

      - name: Cache CocoaPods
        uses: actions/cache@v1
        id: cocoapods_cache
        with:
          path: ios/Pods
          key: ${{ runner.OS }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.OS }}-pods-

      - name: Install Cocoapods
        if: steps.cocoapods_cache.outputs.cache-hit != 'true'
        run: pod install --repo-update
        working-directory: ./ios

      - name: Setup SSH Keys and known_hosts
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            mkdir -p ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-add - <<< "${{ secrets.MATCH_SSH_CERT }}"
      
      # - name: Build Staging .app file for simulators
      #   run: xcodebuild -workspace COVIDSafePaths.xcworkspace -scheme Staging -destination 'platform=iOS Simulator,name=iPhone 11 Pro Max,OS=13.0'
      #   working-directory: ./ios

      # - name: Bundle iOS JS for simulators
      #   run: | 
      #       npx react-native bundle  --entry-file index.js --platform ios --dev false --bundle-output ./main.jsbundle --assets-dest ./ 
      #       cp ./main.jsbundle $HOME/Library/Developer/Xcode/DerivedData/COVIDSafePaths-*/Build/Products/Debug-iphonesimulator/COVIDSafePaths.app

      # - name: Zip simulator bundle for upload
      #   run: zip -r COVIDSafePaths-staging.app.zip $HOME/Library/Developer/Xcode/DerivedData/COVIDSafePaths-*/Build/Products/Debug-iphonesimulator/COVIDSafePaths.app
      #   working-directory: ./ios

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: Debug (iOS) App (Simulators only)
      #     path: ios/COVIDSafePaths-staging.app.zip

      # - name: Build iOS Staging artifact for devices
      #   uses: maierj/fastlane-action@v1.4.0
      #   env:
      #     MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      #     FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      #     MATCH_GIT_BASIC_AUTH: ${{ secrets.MATCH_GIT_BASIC_AUTH }}
      #     SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #   with:
      #     lane: 'staging'
      #     subdirectory: 'ios'
      #     bundle-install-path: 'vendor/bundle'

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: Debug IPA file (work in progress)
      #     path: ios/COVIDSafePaths-staging.ipa

      - name: Build iOS Beta artifact for devices
        uses: maierj/fastlane-action@v1.4.0
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_GIT_BASIC_AUTH: ${{ secrets.MATCH_GIT_BASIC_AUTH }}
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        with:
          lane: 'beta'
          subdirectory: 'ios'
          bundle-install-path: 'vendor/bundle'

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: Debug IPA file (work in progress)
          path: ios/COVIDSafePaths-beta.ipa